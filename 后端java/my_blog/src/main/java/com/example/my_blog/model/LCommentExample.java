package com.example.my_blog.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LCommentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public LCommentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCmNicknameIsNull() {
            addCriterion("cm_nickname is null");
            return (Criteria) this;
        }

        public Criteria andCmNicknameIsNotNull() {
            addCriterion("cm_nickname is not null");
            return (Criteria) this;
        }

        public Criteria andCmNicknameEqualTo(String value) {
            addCriterion("cm_nickname =", value, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameNotEqualTo(String value) {
            addCriterion("cm_nickname <>", value, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameGreaterThan(String value) {
            addCriterion("cm_nickname >", value, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameGreaterThanOrEqualTo(String value) {
            addCriterion("cm_nickname >=", value, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameLessThan(String value) {
            addCriterion("cm_nickname <", value, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameLessThanOrEqualTo(String value) {
            addCriterion("cm_nickname <=", value, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameLike(String value) {
            addCriterion("cm_nickname like", value, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameNotLike(String value) {
            addCriterion("cm_nickname not like", value, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameIn(List<String> values) {
            addCriterion("cm_nickname in", values, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameNotIn(List<String> values) {
            addCriterion("cm_nickname not in", values, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameBetween(String value1, String value2) {
            addCriterion("cm_nickname between", value1, value2, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmNicknameNotBetween(String value1, String value2) {
            addCriterion("cm_nickname not between", value1, value2, "cmNickname");
            return (Criteria) this;
        }

        public Criteria andCmEmailIsNull() {
            addCriterion("cm_email is null");
            return (Criteria) this;
        }

        public Criteria andCmEmailIsNotNull() {
            addCriterion("cm_email is not null");
            return (Criteria) this;
        }

        public Criteria andCmEmailEqualTo(String value) {
            addCriterion("cm_email =", value, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailNotEqualTo(String value) {
            addCriterion("cm_email <>", value, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailGreaterThan(String value) {
            addCriterion("cm_email >", value, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailGreaterThanOrEqualTo(String value) {
            addCriterion("cm_email >=", value, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailLessThan(String value) {
            addCriterion("cm_email <", value, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailLessThanOrEqualTo(String value) {
            addCriterion("cm_email <=", value, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailLike(String value) {
            addCriterion("cm_email like", value, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailNotLike(String value) {
            addCriterion("cm_email not like", value, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailIn(List<String> values) {
            addCriterion("cm_email in", values, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailNotIn(List<String> values) {
            addCriterion("cm_email not in", values, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailBetween(String value1, String value2) {
            addCriterion("cm_email between", value1, value2, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmEmailNotBetween(String value1, String value2) {
            addCriterion("cm_email not between", value1, value2, "cmEmail");
            return (Criteria) this;
        }

        public Criteria andCmQqIsNull() {
            addCriterion("cm_qq is null");
            return (Criteria) this;
        }

        public Criteria andCmQqIsNotNull() {
            addCriterion("cm_qq is not null");
            return (Criteria) this;
        }

        public Criteria andCmQqEqualTo(Integer value) {
            addCriterion("cm_qq =", value, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqNotEqualTo(Integer value) {
            addCriterion("cm_qq <>", value, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqGreaterThan(Integer value) {
            addCriterion("cm_qq >", value, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqGreaterThanOrEqualTo(Integer value) {
            addCriterion("cm_qq >=", value, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqLessThan(Integer value) {
            addCriterion("cm_qq <", value, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqLessThanOrEqualTo(Integer value) {
            addCriterion("cm_qq <=", value, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqIn(List<Integer> values) {
            addCriterion("cm_qq in", values, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqNotIn(List<Integer> values) {
            addCriterion("cm_qq not in", values, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqBetween(Integer value1, Integer value2) {
            addCriterion("cm_qq between", value1, value2, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmQqNotBetween(Integer value1, Integer value2) {
            addCriterion("cm_qq not between", value1, value2, "cmQq");
            return (Criteria) this;
        }

        public Criteria andCmTextIsNull() {
            addCriterion("cm_text is null");
            return (Criteria) this;
        }

        public Criteria andCmTextIsNotNull() {
            addCriterion("cm_text is not null");
            return (Criteria) this;
        }

        public Criteria andCmTextEqualTo(String value) {
            addCriterion("cm_text =", value, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextNotEqualTo(String value) {
            addCriterion("cm_text <>", value, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextGreaterThan(String value) {
            addCriterion("cm_text >", value, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextGreaterThanOrEqualTo(String value) {
            addCriterion("cm_text >=", value, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextLessThan(String value) {
            addCriterion("cm_text <", value, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextLessThanOrEqualTo(String value) {
            addCriterion("cm_text <=", value, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextLike(String value) {
            addCriterion("cm_text like", value, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextNotLike(String value) {
            addCriterion("cm_text not like", value, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextIn(List<String> values) {
            addCriterion("cm_text in", values, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextNotIn(List<String> values) {
            addCriterion("cm_text not in", values, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextBetween(String value1, String value2) {
            addCriterion("cm_text between", value1, value2, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTextNotBetween(String value1, String value2) {
            addCriterion("cm_text not between", value1, value2, "cmText");
            return (Criteria) this;
        }

        public Criteria andCmTimeIsNull() {
            addCriterion("cm_time is null");
            return (Criteria) this;
        }

        public Criteria andCmTimeIsNotNull() {
            addCriterion("cm_time is not null");
            return (Criteria) this;
        }

        public Criteria andCmTimeEqualTo(Date value) {
            addCriterion("cm_time =", value, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeNotEqualTo(Date value) {
            addCriterion("cm_time <>", value, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeGreaterThan(Date value) {
            addCriterion("cm_time >", value, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("cm_time >=", value, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeLessThan(Date value) {
            addCriterion("cm_time <", value, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeLessThanOrEqualTo(Date value) {
            addCriterion("cm_time <=", value, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeIn(List<Date> values) {
            addCriterion("cm_time in", values, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeNotIn(List<Date> values) {
            addCriterion("cm_time not in", values, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeBetween(Date value1, Date value2) {
            addCriterion("cm_time between", value1, value2, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmTimeNotBetween(Date value1, Date value2) {
            addCriterion("cm_time not between", value1, value2, "cmTime");
            return (Criteria) this;
        }

        public Criteria andCmZanIsNull() {
            addCriterion("cm_zan is null");
            return (Criteria) this;
        }

        public Criteria andCmZanIsNotNull() {
            addCriterion("cm_zan is not null");
            return (Criteria) this;
        }

        public Criteria andCmZanEqualTo(Integer value) {
            addCriterion("cm_zan =", value, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanNotEqualTo(Integer value) {
            addCriterion("cm_zan <>", value, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanGreaterThan(Integer value) {
            addCriterion("cm_zan >", value, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanGreaterThanOrEqualTo(Integer value) {
            addCriterion("cm_zan >=", value, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanLessThan(Integer value) {
            addCriterion("cm_zan <", value, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanLessThanOrEqualTo(Integer value) {
            addCriterion("cm_zan <=", value, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanIn(List<Integer> values) {
            addCriterion("cm_zan in", values, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanNotIn(List<Integer> values) {
            addCriterion("cm_zan not in", values, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanBetween(Integer value1, Integer value2) {
            addCriterion("cm_zan between", value1, value2, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmZanNotBetween(Integer value1, Integer value2) {
            addCriterion("cm_zan not between", value1, value2, "cmZan");
            return (Criteria) this;
        }

        public Criteria andCmDeleteIsNull() {
            addCriterion("cm_delete is null");
            return (Criteria) this;
        }

        public Criteria andCmDeleteIsNotNull() {
            addCriterion("cm_delete is not null");
            return (Criteria) this;
        }

        public Criteria andCmDeleteEqualTo(Boolean value) {
            addCriterion("cm_delete =", value, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteNotEqualTo(Boolean value) {
            addCriterion("cm_delete <>", value, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteGreaterThan(Boolean value) {
            addCriterion("cm_delete >", value, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteGreaterThanOrEqualTo(Boolean value) {
            addCriterion("cm_delete >=", value, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteLessThan(Boolean value) {
            addCriterion("cm_delete <", value, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteLessThanOrEqualTo(Boolean value) {
            addCriterion("cm_delete <=", value, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteIn(List<Boolean> values) {
            addCriterion("cm_delete in", values, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteNotIn(List<Boolean> values) {
            addCriterion("cm_delete not in", values, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteBetween(Boolean value1, Boolean value2) {
            addCriterion("cm_delete between", value1, value2, "cmDelete");
            return (Criteria) this;
        }

        public Criteria andCmDeleteNotBetween(Boolean value1, Boolean value2) {
            addCriterion("cm_delete not between", value1, value2, "cmDelete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table l_comment
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 28 13:00:42 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table l_comment
     *
     * @mbggenerated Wed Jun 28 13:00:42 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}